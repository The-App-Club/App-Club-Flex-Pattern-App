$gap: 4vh;
$padding: 4vh;
$color: orange;

$bp: (
  mobile: 480px,
  tablet: 768px,
  desktop: 1440px,
);

@mixin query($display) {
  @each $key, $value in $bp {
    //  defining max-width
    @if ($display == $key) {
      @media screen and (max-width: $value) {
        @content;
      }
      @media screen and (max-device-width: $value) {
        @content;
      }
    }
  }
}

*,
::before,
::after {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

.container {
  display: flex;
  flex-direction: column;

  gap: $gap;
  padding: $padding;
  border: 1vh solid $color;
}

[class^='block-'] {
  display: flex;
  flex-direction: row;

  height: (100vh - 2vh - $gap * 2 - $padding * 2) / 3;

  gap: $gap;

  @include query(mobile) {
    flex-direction: column;
    height: 50vh;
  }
}

[class^='box-'] {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-basis: (100%)/3;
  border: 2px solid black;
  border-radius: 10px;
  background-color: #c1c1c1;
}
